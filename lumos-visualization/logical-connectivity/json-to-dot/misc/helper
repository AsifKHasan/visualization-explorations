set DOCUMENT="NBR__logical-connectivity-data"
set WORKSHEET="structure-bch"
dot-from-gsheet.bat %DOCUMENT% %WORKSHEET%



DOCUMENT="NBR__logical-connectivity-data"
WORKSHEET="structure-bch"
./dot-from-gsheet.sh ${DOCUMENT} ${WORKSHEET}





from collections import defaultdict
def dict_from_enumerable(enumerable, final_value, *groups):
  d = defaultdict(lambda: defaultdict(dict))
  group_count = len(groups)
  for item in enumerable:
    nested = d
    item_result = final_value(item) if callable(final_value) else item.get(final_value)
    for i, group in enumerate(groups, start=1):
      group_val = str(group(item) if callable(group) else item.get(group))
      if i == group_count:
        nested[group_val] = item_result
      else:
        nested = nested[group_val]
  return d

dict_from_enumerable(grouped.groups, 'house', 'area', 'building', 'floor', 'room', 'rack', 'tag', 'name', 'make', 'model')


out = df.groupby(['house', 'area', 'building', 'floor', 'room', 'rack', 'tag', 'name', 'make', 'model']).last().to_dict(orient='index')



df = pd.read_pickle("nbr.pickle")

grouped = df.groupby(['house', 'area', 'building', 'floor', 'room', 'rack', 'tag', 'name', 'make', 'model']).count()


for index, value in grouped:
  pprint(index)


  def df_to_dict(df):
    if df.ndim == 1:
      return df.to_dict()
    ret = {}
    for key in df.index.get_level_values(0):
      sub_df = df.xs(key)
      ret[key] = df_to_dict(sub_df)
    return ret




import json
levels = len(grouped.index.levels)
dicts = [{} for i in range(levels)]
last_index = None
for index, value in grouped.itertuples():
  if not last_index:
    last_index = index
  for (ii,(i,j)) in enumerate(zip(index, last_index)):
    if not i == j:
      ii = levels - ii -1
      dicts[:ii] =  [{} for _ in dicts[:ii]]
      break
  for i, key in enumerate(reversed(index)):
    dicts[i][key] = value
    value = dicts[i]
  last_index = index
result = json.dumps(dicts[-1])
