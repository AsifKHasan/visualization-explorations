graph award_publication {
    label = "Award and Publication Management"

    lane events {
        label = "All Events"
        pool starts_1 {
            label = "Start Events 1"

            start                       start01 [label="New award/publication";]
            startCompensation           start02 [label="Start Compensation";]
            startConditional            start03 [label="Start Conditional";]
            startConditionalNon         start04 [label="Start Conditional Non";]
            startEscalation             start05 [label="Start Escalation";]
            startEscalationNon          start06 [label="Start Escalation Non";]
        }
        pool starts_2 {
            label = "Start Events 2"

            startError                  start07 [label="Start Error";]
            startMessage                start08 [label="Start Message";]
            startMessageNon             start09 [label="Start Message Non";]
            startMultiple               start10 [label="Start Multiple";]
            startMultipleNon            start11 [label="Start Multiple Non";]
        }
        pool starts_3 {
            label = "Start Events 3"

            startParallelMultiple       start12 [label="Start Parallel Multiple";]
            startParallelMultipleNon    start13 [label="Start Parallel Multiple Non";]
            startSignal                 start14 [label="Start Signal";]
            startSignalNon              start15 [label="Start Signal Non";]
            startTimer                  start16 [label="Start Timer";]
            startTimerNon               start17 [label="Start Timer Non";]
        }
        pool ends_1 {
            label = "End Events 1"

            end              end1 [label="End";]
            endCancel        end2 [label="End Cancel";]
            endCompensate    end3 [label="End Compensate";]
            endError         end4 [label="End Error";]
            endEscalation    end5 [label="End Escalation";]
        }
        pool ends_2 {
            label = "End Events 2"

            endMessage       end6 [label="End Message";]
            endMultiple      end7 [label="End Multiple";]
            endSignal        end8 [label="End Signal";]
            endTerminate     end9 [label="End Terminate";]
        }
        pool intermediates_1 {
            label = "Intermediate Events 1"

            intermediate                intermediate01 [label="Intermediate";]
            catchCancel                 intermediate02 [label="Intermediate Catch Cancel";]
            catchCompensation           intermediate03 [label="Intermediate Catch Compensation";]
            throwCompensation           intermediate04 [label="Intermediate Throw Compensation";]
            catchError                  intermediate05 [label="Intermediate Catch Error";]
        }
        pool intermediates_2 {
            label = "Intermediate Events 2"

            catchEscalation             intermediate06 [label="Intermediate Catch Escalation";]
            catchEscalationNon          intermediate07 [label="Intermediate Catch Escalation Non";]
            throwEscalation             intermediate08 [label="Intermediate Throw Escalation";]
            catchLink                   intermediate09 [label="Intermediate Catch Link";]
            throwLink                   intermediate10 [label="Intermediate Throw Link";]
        }
        pool intermediates_3 {
            label = "Intermediate Events 3"

            catchMessage                intermediate11 [label="Intermediate Catch Message";]
            catchMessageNon             intermediate12 [label="Intermediate Catch Message Non";]
            throwMessage                intermediate13 [label="Intermediate Throw Message";]
            catchMultiple               intermediate14 [label="Intermediate Catch Multiple";]
            catchMultipleNon            intermediate15 [label="Intermediate Catch Multiple Non";]
            throwMultiple               intermediate16 [label="Intermediate Throw Multiple";]
        }
        pool intermediates_4 {
            label = "Intermediate Events 4"

            catchParallelMultiple       intermediate17 [label="Intermediate Catch ParallelMultiple";]
            catchParallelMultipleNon    intermediate18 [label="Intermediate Catch ParallelMultiple Non";]
            catchSignal                 intermediate19 [label="Intermediate Catch Signal";]
            catchSignalNon              intermediate20 [label="Intermediate Catch Signal Non";]
            throwSignal                 intermediate21 [label="Intermediate Throw Signal";]
        }
        pool intermediates_5 {
            label = "Intermediate Events 5"

            conditional                 intermediate22 [label="Intermediate conditional";]
            conditionalNon              intermediate23 [label="Intermediate conditional Non";]
            timer                       intermediate24 [label="Intermediate Timer";]
            timerNon                    intermediate25 [label="Intermediate Timer Non";]
        }
    }
    lane gateways {
        label = "All Gateways"
        pool gateways {
            label = "Gateways"

            exclusive                   gateway01 [label="Exclusive";]
            inclusive                   gateway02 [label="Inclusive";]
            parallel                    gateway03 [label="Parallel";]
            complex                     gateway04 [label="Complex";]
            eventBased                  gateway05 [label="Event Based";]
            eventBasedStart             gateway06 [label="Event Based Start";]
            eventBasedParallelStart     gateway07 [label="Event Based Parallel Start";]
        }
    }
    lane ictd {
        label = "ICT Division"
        pool employee {
            label = "Global Admin"

            start start1 [label="New award/publication";]
            intermediate intermediate [label="Intermediate";]
            task upload_form [label="Upload award publication information form";]
            task send_to_authority [label="Send request to authority";]
            task modify [label="Create User Procurement Entity 1";]

            start1 ..> upload_form
        }
        pool authority {
            label = "Authority"
            # task receice_request [label="Receive request";]
            # task verify_request [label="Verify employee request";]
            # task send_back_for_modification [label="Send back form for modification";]

            receice_request ..> verify_request ..> request_approval
            request_approval ..> send_back_for_modification [label="No";]
        }
        pool system {
            label = "System"
            task notify_employee [label="Notify employee";]
            task update_employee_details [label="Update employee details";]
            task set_view_status [label="Set view status of the award(s)/publication(s)";]
            end end1 [label="Completed";]

            notify_employee ..> update_employee_details ..> set_view_status ..> end1
        }
    }
    lane mopa {
        label = "Ministry of Public Administration (MoPA)"
        pool pmis {
            label = "Personnel Management Information System (PMIS)"
            process employee_details [label="Employee Details - who is the employee";]
            adhoc employee_adhoc [label="Employee Adhoc";]
            transaction employee_transaction [label="Employee Transaction";]
            event employee_event [label="Employee Event";]
            call employee_call [label="Employee Call";]
        }
    }
}
